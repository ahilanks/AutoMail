import pandas as pd
import fitz
import google.generativeai as genai
import anthropic

client = anthropic.Anthropic(
    # defaults to os.environ.get("ANTHROPIC_API_KEY")
    api_key="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",
)

people = pd.read_csv('/Users/ahilankaruppusami/Downloads/Mail Merge Test 2 - Sheet1 (2).csv')
resume_path = "/Users/ahilankaruppusami/Downloads/Karuppusami_Ahilan--Resume.pdf"

# Extract resume_text from all pages
with fitz.open(resume_path) as doc:
    resume_text = ''.join(page.get_text() for page in doc)

# Function to split names correctly into FirstName and LastName
def split_name(name):
    parts = name.split()  # Split by spaces
    first_name = parts[0]  # First part is the first name
    last_name = ' '.join(parts[1:]) if len(parts) > 1 else ''  # Join remaining parts as last name
    return pd.Series([first_name, last_name])

def findEmail(people):
    # Split 'Name' into 'FirstName' and 'LastName'
    people[['FirstName', 'LastName']] = people['Name'].apply(split_name)
    
    # Generate emails (replace with your actual email generation logic)
    emails = []
    for i, row in people.iterrows():
        email = f"{row['FirstName']}.{row['LastName']}@{row['Company'].replace(' ', '').lower()}.com"
        emails.append(email)
    
    people['Emails'] = emails

def writeEmail(df):
    emails = []
    for _, person in df.iterrows():
        prompt = f"""
        Generate a personalized email requesting a chat with:
        
        Recipient: {person.to_dict()}
        
        Using relevant details from this resume:
        {resume_text}
        
        The email should be professional, concise, and highlight relevant connections 
        between the resume and the recipient's background or company. Do not include any 
        brackets or fill in the blanks. Instead assume something specific based on the background 
        of the person(you should search this up) and the on the interests of the resume.

        Do not include the Subject line.

        Start with Hi <Name>,
        """
        
        response = client.messages.create(
            model="claude-3-5-sonnet-20241022",
            max_tokens=8000,
            messages=[
                {"role": "user", "content": f"{prompt}"}
            ]
        )
        emails.append(response.content)
    df['Email Content'] = emails

findEmail(people)
writeEmail(people)

people.to_excel("/Users/ahilankaruppusami/Coding_Projects/Mail Merging/Spreadsheets/my_data.xlsx", index=False)